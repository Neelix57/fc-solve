#include '../template.wml'

<latemp_subject "The Freecell Solver Frequently Asked Questions (F.A.Q.) List" />

<h3 id="a_move_seems_wrong">I think I found a wrong move in the solution? What can I do?</h3>

<p>
While it is not unthinkable that Freecell Solver will have a bug and will
make a wrong move, it is extremely unlikely that that is the case. Some people
have reported that several multi-sequence moves are impossible, but as I
demonstrated to them, they were in fact possible.
</p>

<p>
One can find the maximal number of cards that can be moved as a sequence
in Freecell using the formula
<tt>max_cards = (1 + num_vacant_freecells) * (2 ^ num_vacant_columns)</tt>
(where “*” is multiplication and “^” is exponentiation.). One can also try using
<a href="https://metacpan.org/module/expand-solitaire-multi-cards-moves">expand-solitaire-multi-cards-moves</a>
from the <a href="https://metacpan.org/release/Games-Solitaire-Verify">Games-Solitaire-Verify CPAN distribution</a> (by the same author of Freecell Solver),
in order to filter solutions and produce ones with multi-card moves
expanded into many single-card moves. If you are on Microsoft Windows, you can
install <a href="http://dwimperl.com/">DWIM Perl</a> and run it.
</p>

<h3 id="abuse_of_fc_solve">I think I found an abuse of Freecell Solver. What should I do?</h3>

<p>
We received a report or two about various people or companies distributing
Freecell Solver along with their products, and the answer is that it is:
1. Likely legal, 2. We don't mind, and 3. We encourage commercial and/or
proprietary use of the code or binaries.
</p>

<p>
Freecell Solver used to be distributed under the Public Domain, but was
relicensed to the permissive
<a href="http://en.wikipedia.org/wiki/MIT_License">MIT/X11 licence</a> due
to the problematic and not globally accepted nature of the Public Domain,
especially in software. (See
<a href="http://linuxmafia.com/faq/Licensing_and_Law/public-domain.html">the
page maintained by Rick Moen about it</a>.) As far as we know (and this is
not legal advice), the main legal and practical
difference between the public domain and the X11 licence, is that one should
keep attributing the original copyright holders as rightful holders (while
the licence of derivative works may be changed into any other). As far as
we are concerned, this is not something we want to enforce, but we still
recommend to follow this, to stay on the safe side of the law.
</p>

<p>
So unless someone sues us for damages for a problem caused by the program
or library (which violates the no warrany paragraph of the licence) everything
should be fine and the “abuse” of the program is acceptable.
</p>

<h3 id="what_are_the_uses_of_a_solver">What are the uses of a solver for Patience, such as Freecell Solver?</h3>

<p>
Freecell Solver is unlikely to help in curing cancer, or solve world hunger,
but it still has some uses. One use is determining whether an initial layout
of a game, or a layout in mid-play is solvable or not so a human player can
know whether he needs to return to an earlier position. The default
configuration of Freecell solver may still report a small number of solvable
positions as unsolved, but that can be mitigated by passing some command-line
flags.
</p>

<p>
Another use of a Solitaire solver is to find solutions for difficult deals,
or attempt to find shorter solutions. Yet another use is to collect statistics
from a large number of random deals (say, the Microsoft Windows Freecell deals
or PySolFC’s deals), which is part of what Freecell researchers do.
</p>

<p>
The Freecell implementation for Windows, Freecell 3D has also introduced a
“Race against the computer” mode of Freecell, which is an interesting challenge.
</p>

<p>
Finally, we have more recently started to investigate some “human/computer
collaborated” Freecell solving, where a human aided by a Solitaire suite with
good solver integration can attempt to solve some difficult deals (for both a
human and a computerised solver), by pruning dead ends, and by finding whether
reached states are solvable. This provides a combined solving power, that is
greater than the sum of both parts.
</p>

<!--

TODO:

* I started to write a solver for Freecell, but it is too slow? What can I do?
* May I integrate Freecell Solver into my program? And how?
* The solutions are too long. What can I do?
* Why is Freecell Solver written in C? Why not in another language?
* I found a solution that Freecell Solver erroneously reports as unsolveable - should I report it to you?

-->


