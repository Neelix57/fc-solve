#include "template5.wml"
#include "Inc/js_fc_solve.wml"

<latemp_subject "Online Freecell solver (text based)" />

<define-tag desc>
<p>
An online solver for
<a href="http://en.wikipedia.org/wiki/FreeCell">Freecell</a>, a kind of
card solitaire game, and <a href="#other_games">several related solitaire games</a>. <span class="enable_js">Please enable
<strong>JavaScript</strong>.</span>
</p>
</define-tag>

<define-tag emscripten_common>
<preserve incs subject />
<set-var %attributes />

<js_script>
$(function() { $('.enable_js').addClass('ok'); })
</js_script>

<h2 id="ui"><get-var subject /></h2>

<desc />

<p>
<a href="#how_to_use"><strong class="instructions_link">Instructions</strong></a>
</p>

<div class="disabled">
<div class="emscripten" id="status">Downloading...</div>
<div class="emscripten">
<!--
  <progress value="0" max="100" id="progress"></progress>
-->
</div>
</div>

<js_script>
function highlight_in_board(start,end) {
    const el = document.getElementById("stdin");
    el.focus();
    el.setSelectionRange(start,end);
    return;
}
requirejs.config({
    baseUrl: '$(ROOT)/js',
    });
    <get-var incs /> {
<when>
    require(['solitaire', 'iphone', 'auto-stack-clear', 'auto-turnover', 'statistics', 'autoplay', 'application', 'freecell',], function (solitaire, iphone, auto_stack, auto_turn, statistics, autoplay, application, freecell) {
    </when>

    $(function() {
        const controls = $('.phoenix');
        if (window.location.search.length) {
            controls.phoenix('remove');
        } else {
            controls.phoenix();
        }
        $( "#fc_solve_tabs" ).tabs({
            activate: function () {
                web_fc_solve_ui.set_up_handlers();

                return;
            },
            beforeActivate: function( event, ui) {
                var mynew = ui.newPanel;
                var old = ui.oldPanel;

                var common_old = old.find('.fcs_common');
                var old_text = common_old.find('textarea').val();

                var common_html = common_old.html();

                common_old.html('');

                var common_new = mynew.find('.fcs_common');

                common_new.html(common_html);
                common_new.find('textarea').val(old_text);

                return;
            }
        });
    // });

    web_fc_solve_ui.set_up();

    });
});
</js_script>

<restore incs subject />
</define-tag>
<emscripten_common incs="require([\"web-fc-solve-ui\", 'solver-freecell', 'solitaire','iphone', 'auto-stack-clear', 'auto-turnover', 'statistics', 'autoplay', 'application', 'freecell',], function (web_fc_solve_ui, solver, solitaire, iphone, auto_stack, auto_turn, statistics, autoplay, application, freecell)" subject="Solver" />
;;; <emscripten_common incs="require([\"web-fc-solve-ui\", ], function (web_fc_solve_ui)" subject="Solver" />
<div class="solitairey_body" id="solitairey_body">
<img src="loading.gif" class="loading hidden" alt="Loading" />
<button id="redeal">Redeal</button>
<span style="color:white;">Deal Number:</span> <input id="deal_num_shlomify" size="30" name="deal_num_shlomify" readonly="readonly"/>
	<div id="game-chooser">
        <button id="close-chooser">Return to game</button>
	</div>
	<img src="loading.gif" class="loading hidden" alt="Loading" />
	<div class="chromestore hidden">
		<a class="hide">[Hide]</a>
        <a href="https://chrome.google.com/webstore/detail/dofbnmhnoodmmlhflbcihicmbnhhinhp">
            <img alt="Chrome Web Store" src="ChromeWebStore_Badge_v2_206x58.png" />
        </a>
	</div>
</div>
<div id="fc_solve_tabs" class="fc_solve_tabs">

<ul>
<li><a href="#fc_solve_tabs__numbered_deal">Solve a Numbered Deal</a></li>
<li><a href="#fc_solve_tabs__any_board">Solve any Board</a></li>
</ul>

<div id="fc_solve_tabs__numbered_deal" class="tab">

<p class="first">
<label for="deal_number">Enter an MS Freecell Deal:</label>
<input type="text" id="deal_number" size="12" class="phoenix" />
<button id="populate_input" title="Populate Input with a Windows Freecell Numbered Deal">Populate</button><br />
</p>

<div class="fcs_common">

<stdin_and_buttons main_id="run_do_solve" main_text="Solve!"/>
<br />
<label for="preset">Solving method:</label>
<select id="preset" class="phoenix">
<option value="lg" selected="selected">“Looking Glass” (fastest on average)</option>
<option value="ve">“Video Editing” (short solutions)</option>
<option value="obf">“One Big Family” (fast on average)</option>
<option value="default">Default</option>
</select>

</div> ;;; end of fcs_common

</div> ;;; end of fc_solve_tabs__numbered_deal

<div id="fc_solve_tabs__any_board" class="tab">

<p class="first">
Input a card patience/solitaire layout in the <a href="$(ROOT)/docs/distro/README.html">fc-solve format</a>:<br />
</p>

<div class="fcs_common">
</div>

</div> ;;; end of fc_solve_tabs__any_board

</div>

<div class="diags_wrap">

<p id="status_wrap">

<strong>Status:</strong> <span id="fc_solve_status" class="not_started">Not started</span> <br />

</p>

<div class="hide" id="board_parse__wrap">
<h2>Board Input Parsing Errors:</h2>
<div id="board_parse_error"></div>
</div>

</div>

<div id="fcs_advanced">
<:{
use FreecellSolver::ExtractGames;
print FreecellSolver::ExtractGames->new->calc_html;
}:>
<br />
<label for="string_params">String Parameters:</label><br />
<textarea class="emscripten phoenix" id="string_params" cols="50" rows="15"></textarea>
<p>
(Format as a preset file, with backslashes at the end of lines. See the
<a href="$(ROOT)/docs/">online documentation</a> for information regarding syntax.)
</p>
</div>


<label for="output">Output:</label><br />

<div class="output_form">
<div id="dynamic_output"></div>
<textarea class="emscripten" id="output" cols="50" rows="30" readonly="readonly"></textarea>

<div class="controls">

<input id="one_based" type="checkbox" title="1-based offset" class="phoenix" checked="checked" /><label for="one_based">1-based</label><br />
<fieldset>
<legend>Cards display</legend>
<define-tag opt>
<preserve sel />
<set-var %attributes />
<input name="unicode_suits" id="unicode_suits__<get-var id_base />" type="radio" title="<get-var title />" class="phoenix" value="<get-var value />" <when <get-var sel /> > checked="checked"</when> /><label for="unicode_suits__<get-var id_base />"><get-var title /></label><br />
<restore sel />
</define-tag>
<opt id_base="ascii" value="0" title="ASCII" sel="true" />
<opt id_base="unisuits" value="1" title="Unicode Suits" />
<opt id_base="unicards" value="2" title="Unicode Cards" />
</fieldset>
<br />
<button id="clear_output" title="Clear the Output Box">Clear Output</button>
</div>
</div>
<br />

<fc_solve_bookmark__form />

<h2 id="how_to_use">How to Use</h2>

<p>
Enter a board in <a href="#stdin">the input text area</a> in
<a href="http://fc-solve.shlomifish.org/docs/distro/README.html">Freecell
Solver’s input format</a> with each line of input representing a column (or
stack) of cards. Freecells and foundations can also be specified. Numbered
layouts (compatible with
<a href="http://en.wikipedia.org/wiki/FreeCell_%28Windows%29">Microsoft
Windows FreeCell</a>, FreeCell Pro and compatible
Freecell implementations) can be input using the
<a href="#deal_number">deal number feature</a>. Press the <a href="#run_do_solve">“Solve” button</a> to
run the solver, and assuming it was successful, you will be able to read
and/or copy the output from <a href="#output">the output box</a>.
</p>

<p>
Enjoy!
</p>

<h3 id="other_games">Solving other, similar, games</h3>

<p>
Select the game from <a href="#game_type_label">the drop-down</a>.
</p>

<h2 id="technology">Technology</h2>

<fc_solve_jsfcs__credits__common />

<li>
<p>
<a href="http://code.google.com/p/joose-js/">Joose</a> - an object oriented
programming system for JavaScript (inspired by
<a href="http://moose.iinteractive.com/">Perl's Moose</a>). <b>Note:</b>
it is no longer used here due to not being compatible with Node.js and
non-browser environments.
</p>
</li>

<li>
<p>
<a href="https://github.com/kylefox/jquery-querystring">jquery-querystring</a> -a plugin for jQuery for manipulating query strings.
</p>
</li>

<li>
<p>
<a href="https://getfirebug.com/">Firebug</a> - a web development tool for
Firefox, that provides a JavaScript debugger, a CSS manipulation tool, DOM
introspection and more. (The Opera web browser's Opera Dragonfly does something
similar for Opera, and is also useful.)
</p>
</li>

<li>
<p>
<a href="http://www.google.com/webfonts">Google Web Fonts</a> - provides an
attractive font for the button leading to this page.
</p>
</li>
</ul>

<h2 id="credits">Credits</h2>
<ul>

<li>
<p>
<a href="https://github.com/kripken">Alon Zakai</a> - writing
<a href="https://github.com/kripken/emscripten">emscripten</a>, the
LLVM-to-JavaScript compiler that was used to prepare this page, based
on the original C (gnu99) source, and answering some bug reports and questions
I filed about it.
</p>
</li>

<li>
<p>
<a href="http://garage-coding.com/">Stefan Petrea</a> - inspired the
implementation of the populate-with-sample-board button.
</p>
</li>

<li>
<p>
<a href="http://en.wikipedia.org/wiki/User:Amire80">Amir Aharoni</a> - tipped
me regarding integrating <code>@font-face</code> into my CSS.
</p>
</li>

<li>
<p>
<a href="mailto:ari.i.becker@gmail.com">Ari Becker</a> - tipped me regarding
unsolvable deals.
</p>
</li>

</ul>
