/* vim:syn=tt2
*/
#include <tap.h>
#include <string.h>

#include "../card.c"

int main_tests()
{
    char buffer[1024];

[% SET num_tests = 0 %]
[% FOREACH suit = suits %]
[% FOREACH card_num = card_nums %]
[% FOREACH t = [0,1] %]
[% SET t_key = t ? "t" : "non_t" %]
[% SET card_string = ('"' 
            _   card_num.value.${t_key}
            _   suit.value
            _   '"') %]
    {
        fcs_card_t mycard;
        fcs_card_set_suit(mycard, [% suit.idx %]);
        fcs_card_set_num(mycard, [% card_num.idx %]);
        char * ret = freecell_solver_card_perl2user(mycard, buffer, [% t %]);
        /* TEST */
        [% SET num_tests = num_tests + 1 %]
        ok ((ret >= buffer) && (ret <= buffer + sizeof(buffer)), 
           "Card is within bounds of buffer");
        /* TEST */
        [% SET num_tests = num_tests + 1 %]
        ok (!strncmp(buffer, [% card_string %], ret - buffer),
            "Trying to render " [% card_string %] " into a string");
    }
[% END %]
[% END %]
[% END %]
}

int main(void)
{
  plan_tests([% num_tests %]); 
  main_tests(); 
  return exit_status();
}
